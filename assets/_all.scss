@import 'noconflict';

// Colors

@function cmyk($cyan, $magenta, $yellow, $key) {
  @return sg-cmyk($cyan, $magenta, $yellow, $key);
}

@function hsv($hue, $saturation, $value) {
  @return sg-hsv($hue, $saturation, $value);
}

@function hsb($hue, $saturation, $brightness) {
  @return sg-hsb($hue, $saturation, $brightness);
}

@function random-color() {
  @return sg-random-color();
}

@function shade($color, $percent) {
  @return sg-shade($color, $percent);
}

@function tint($color, $percent) {
  @return sg-tint($color, $percent);
}

// Lists

@function contains($list, $test) {
  @return sg-contains($list, $test);
}

@function each($function, $list, $args...) {
  @return sg-each($function, $list, $args);
}

@function filter($list, $filters...) {
  @return sg-filter($list, $filters);
}

@function compact($list) {
  @return sg-compact($list);
}

@function join($list, $separator: ',') {
  @return sg-join($list, $separator);
}

// Numbers

@function add-unit($number, $unit) {
  @return sg-add-unit($number, $unit);
}

@function polar-to-cartesian($distance, $angle) {
  @return sg-polar-to-cartesian($distance, $angle);
}

@function coordinates($distance, $angle) {
  @return sg-coordinates($distance, $angle);
}

@function coords($distance, $angle) {
  @return sg-coords($distance, $angle);
}

@function inverse($numbers) {
  @return sg-inverse($numbers);
}

@function strip-unit($number) {
  @return sg-strip-unit($number);
}

// Strings

@function str-append($string, $insert) {
  @return sg-str-append($string, $insert);
}

@function str-contains($string, $substr, $start: 0) {
  @return sg-str-contains($string, $substr, $start);
}

@function str-count($string, $substring) {
  @return sg-str-count($string, $substring);
}

@function str-prepend($string, $insert) {
  @return sg-str-prepend($string, $insert);
}

@function str-wrap($string, $prepend, $append) {
  @return sg-str-wrap($string, $prepend, $append);
}
